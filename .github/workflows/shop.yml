name: Shop tests with a module

on: workflow_dispatch

env:
  PACKAGE_NAME: 'oxid-esales/module-template'
  MODULE_PATH: 'oe/moduletemplate'

jobs:
  install_shop_with_module:
    strategy:
      matrix:
        php: [ '8.0' ]
    runs-on: ubuntu-latest
    steps:
      - name: Clone testing environment master
        run: git clone https://github.com/OXID-eSales/docker-eshop-sdk.git .

      - name: Clone the shop
        run: git clone --depth 1 https://github.com/OXID-eSales/oxideshop_ce.git --branch b-6.5.x --single-branch source

      - name: Cache current installation
        uses: actions/cache@v3
        with:
          path: |
            ./*
          key: shopInstallation-${{ matrix.php }}-${{ github.sha }}

      - name: Prepare container configuration
        run: |
          make setup
          make addbasicservices
          make file=services/selenium-chrome.yml addservice
          make file=services/selenium-firefox.yml addservice
          
          perl -pi\
            -e "s#PHP_VERSION=.*#PHP_VERSION='${{ matrix.php }}'#g;"\
            .env

          perl -pi\
            -e 's#display_errors =.*#display_errors = false#g;'\
            -e 'print "xdebug.max_nesting_level=1000\nxdebug.mode=coverage\n\n"'\
            containers/php-fpm/custom.ini

          perl -pi\
            -e 's#/var/www/#/var/www/source/#g;'\
            containers/httpd/project.conf

      - name: Prepare shop configuration
        run: |
          cp source/source/config.inc.php.dist source/source/config.inc.php
          sed -i "1s+^+SetEnvIf Authorization "\(.*\)" HTTP_AUTHORIZATION=\$1\n\n+" source/source/.htaccess
          sed -i -e 's/<dbHost>/mysql/'\
                 -e 's/<dbUser>/root/'\
                 -e 's/<dbName>/example/'\
                 -e 's/<dbPwd>/root/'\
                 -e 's/<dbPort>/3306/'\
                 -e 's/<sShopURL>/http:\/\/localhost.local\//'\
                 -e 's/<sShopDir>/\/var\/www\/source\//'\
                 -e 's/<sCompileDir>/\/var\/www\/source\/tmp\//'\
              source/source/config.inc.php

      - name: Start containers
        run: |
          make up
          sleep 2

      - name: Checkout current module
        uses: actions/checkout@v3
        with:
          path: source/test-module

      - name: Install module
        run: |
          docker-compose exec -T \
            php composer config repositories.${{ env.PACKAGE_NAME }} \
            --json '{"type":"path", "url":"./test-module", "options": {"symlink": true}}'
          docker-compose exec -T \
            php composer require ${{ env.PACKAGE_NAME }}:* --no-interaction --no-update

      - name: Install dependencies and reset shop
        run: |
          docker-compose exec -T php composer update --no-interaction
          docker-compose exec -T php php vendor/bin/reset-shop

      - name: Stop containers
        run: |
          docker-compose down
          sleep 2

  unit_tests:
    strategy:
      matrix:
        php: [ '8.0' ]
    needs: [ install_shop_with_module ]
    runs-on: ubuntu-latest
    steps:
      - name: Load current installation from cache
        uses: actions/cache@v3
        with:
          path: |
            ./*
          key: shopInstallation-${{ matrix.php }}-${{ github.sha }}
          restore-keys: |
            shopInstallation-${{ matrix.php }}-${{ github.sha }}

      - name: Start containers
        run: |
          make up
          sleep 2

      - name: Run tests
        run: |
          docker-compose exec -T \
            -e PARTIAL_MODULE_PATHS=${{ env.MODULE_PATH }} \
            -e ACTIVATE_ALL_MODULES=1 \
            -e RUN_TESTS_FOR_SHOP=1 \
            -e RUN_TESTS_FOR_MODULES=0 \
            -e ADDITIONAL_TEST_PATHS='' \
            php php vendor/bin/runtests  --filter '/^((?!(someTestFunctionNameToFilterOut|orAnotherToFilterOut)).)*$/' AllTestsUnit

      - name: Upload log artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: TestsLog-${{ matrix.php }}
          path: |
            source/phpunit.xml

  acceptance_tests:
    strategy:
      matrix:
        php: [ '8.0' ]
    needs: [ install_shop_with_module ]
    runs-on: ubuntu-latest
    steps:
      - name: Load current installation from cache
        uses: actions/cache@v3
        with:
          path: |
            ./*
          key: shopInstallation-${{ matrix.php }}-${{ github.sha }}
          restore-keys: |
            shopInstallation-${{ matrix.php }}-${{ github.sha }}

      - name: Start containers
        run: |
          make up
          sleep 2

      - name: Run tests
        run: |
          docker-compose exec -T \
            -e PARTIAL_MODULE_PATHS=${{ env.MODULE_PATH }} \
            -e ACTIVATE_ALL_MODULES=1 \
            -e RUN_TESTS_FOR_SHOP=1 \
            -e RUN_TESTS_FOR_MODULES=0 \
            -e SELENIUM_SERVER_IP=seleniumfirefox \
            -e ADDITIONAL_TEST_PATHS='' \
            php php vendor/bin/runtests-selenium --filter '/^((?!(someTestFunctionNameToFilterOut|orAnotherToFilterOut|ShopSetUpTest|testCreateNews|testEditingOrdersProducts)).)*$/' AllTestsSelenium

  codeception_tests:
    strategy:
      matrix:
        php: [ '8.0' ]
    needs: [ install_shop_with_module ]
    runs-on: ubuntu-latest
    steps:
      - name: Load current installation from cache
        uses: actions/cache@v3
        with:
          path: |
            ./*
          key: shopInstallation-${{ matrix.php }}-${{ github.sha }}
          restore-keys: |
            shopInstallation-${{ matrix.php }}-${{ github.sha }}

      - name: Start containers
        run: |
          make up
          sleep 2

      - name: Run tests
        run: |
          docker-compose exec -T \
            -e PARTIAL_MODULE_PATHS=${{ env.MODULE_PATH }} \
            -e ACTIVATE_ALL_MODULES=1 \
            -e RUN_TESTS_FOR_SHOP=1 \
            -e RUN_TESTS_FOR_MODULES=0 \
            -e SELENIUM_SERVER_HOST=selenium \
            -e BROWSER_NAME=chrome \
            -e ADDITIONAL_TEST_PATHS='' \
            php php vendor/bin/runtests-codeception
